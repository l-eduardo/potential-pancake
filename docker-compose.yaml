services:
  web:
    container_name: backend_potential_pancake
    image: potential_pancake_backend/seniores
    # command: python manage.py runserver 0.0.0.0:8000
    build: .
    tty: true
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      backend-db:
        ipv4_address: 10.5.0.3      

  db:
    image: postgres:16
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
      - PGPORT=${SQL_PORT}
    restart: "on-failure"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - 5432:5432
    networks:
      backend-db:
        ipv4_address: 10.5.0.2

networks:
  backend-db:
    name: backend-db
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1